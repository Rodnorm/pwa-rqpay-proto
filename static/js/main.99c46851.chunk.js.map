{"version":3,"sources":["services/payment.service.ts","views/PaymentTab.tsx","views/WelcomeTab.tsx","views/FeedbackTab.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["URL","mockedCreation","transactionId","terminalId","ibanPayer","amount","purposeCode","createdAt","useStyles","makeStyles","theme","createStyles","form","margin","input","marginTop","width","container","display","justifyContent","flexDirection","button","alignSelf","PaymentTab","props","changeStep","toggleLoading","classes","className","TextField","label","disabled","variant","defaultValue","placeholder","multiline","rowsMax","Button","onClick","setTimeout","data","Axios","post","then","response","finally","color","WelcomeTab","FeedbackTab","Container","CircularProgress","TabPanel","children","value","index","other","role","hidden","id","aria-labelledby","Box","p","a11yProps","root","flexGrow","backgroundColor","palette","background","paper","backdrop","zIndex","drawer","App","useState","setValue","loading","setLoading","handleSteps","step","Backdrop","open","AppBar","position","Tabs","onChange","event","newValue","aria-label","Tab","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","process","href","origin","addEventListener","fetch","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.99c46851.chunk.js","sourcesContent":["import Axios, { AxiosResponse } from \"axios\";\r\n\r\nexport const URL =\r\n  \"https://virtserver.swaggerhub.com/CPGFinanceSystems/rqpay/1.0.0/requests/\";\r\n\r\ninterface RequestCreate {\r\n  transactionId: string;\r\n  terminalId: string;\r\n  ibanPayer: string;\r\n  amount: number;\r\n  purposeCode: string;\r\n  createdAt: string;\r\n}\r\n\r\nexport const triggerPayment = (data: RequestCreate): Promise<AxiosResponse> =>\r\n  Axios.post(`${URL}create`, data);\r\n\r\nexport const getStatus = (): Promise<AxiosResponse> =>\r\n  Axios.get(`${URL}status?transactionId=${mockedCreation.transactionId}`);\r\n\r\nexport const mockedCreation = {\r\n  transactionId: \"1324354657689\",\r\n  terminalId: \"123456789\",\r\n  ibanPayer: \"DE33100205000001194700\",\r\n  amount: 12525.68,\r\n  purposeCode:\r\n    \"Bikers Best Shop, Strasbourg, 17.09.2020, TransactionID 123456789, TerminalID 1324354657689\",\r\n  createdAt: \"2020-09-17T13:59:31.238Z\",\r\n};\r\n\r\nexport interface GeneralProps {\r\n  changeStep: (step: number) => void;\r\n  toggleLoading: () => void;\r\n}\r\n","import {\r\n  Backdrop,\r\n  Button,\r\n  CircularProgress,\r\n  createStyles,\r\n  makeStyles,\r\n  TextField,\r\n  Theme,\r\n} from \"@material-ui/core\";\r\nimport { AxiosResponse } from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  GeneralProps,\r\n  mockedCreation,\r\n  triggerPayment,\r\n} from \"../services/payment.service\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    form: {\r\n      margin: \"2rem\",\r\n    },\r\n    input: {\r\n      marginTop: \"1rem\",\r\n      width: \"100%\",\r\n    },\r\n    container: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      flexDirection: \"column\",\r\n    },\r\n    button: {\r\n      width: \"60%\",\r\n      alignSelf: \"center\",\r\n    },\r\n  })\r\n);\r\n\r\nfunction PaymentTab(props: GeneralProps) {\r\n  const { changeStep, toggleLoading } = props;\r\n  const classes = useStyles();\r\n\r\n  const createRequest = () => {\r\n    toggleLoading();\r\n    setTimeout(() => {\r\n      triggerPayment(mockedCreation)\r\n        .then((response: AxiosResponse) => changeStep(2))\r\n        .finally(() => toggleLoading());\r\n    }, 500);\r\n  };\r\n\r\n  return (\r\n    <section className={classes.container}>\r\n      <form className={classes.form}>\r\n        <TextField\r\n          className={classes.input}\r\n          label=\"IBAN\"\r\n          disabled\r\n          variant=\"outlined\"\r\n          defaultValue={mockedCreation.ibanPayer}\r\n        />\r\n        <TextField\r\n          className={classes.input}\r\n          label=\"Amout\"\r\n          disabled\r\n          variant=\"outlined\"\r\n          defaultValue={mockedCreation.amount}\r\n        />\r\n        <TextField\r\n          className={classes.input}\r\n          disabled\r\n          variant=\"outlined\"\r\n          placeholder=\"Purpose\"\r\n          multiline\r\n          rowsMax={4}\r\n          defaultValue={mockedCreation.purposeCode}\r\n        />\r\n      </form>\r\n      <Button\r\n        onClick={createRequest}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={classes.button}\r\n      >\r\n        Click here to Pay\r\n      </Button>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default PaymentTab;\r\n","import React from 'react'\r\nimport { GeneralProps } from '../services/payment.service';\r\n\r\n\r\nfunction WelcomeTab(props: GeneralProps) {\r\n  const {} = props;\r\n\r\n  return <div>Welcome</div>;\r\n}\r\n\r\nexport default WelcomeTab   ","import { CircularProgress, Container, createStyles, makeStyles, Theme } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { GeneralProps } from \"../services/payment.service\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    container: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\"\r\n    }\r\n  })\r\n);\r\n\r\nfunction FeedbackTab(props: GeneralProps) {\r\n  const classes = useStyles()\r\n  const {} = props;\r\n\r\n  return (\r\n    <Container className={classes.container}>\r\n      <CircularProgress color=\"inherit\" />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default FeedbackTab;","import React, { useState } from \"react\";\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Box from \"@material-ui/core/Box\";\nimport PaymentTab from \"./views/PaymentTab\";\nimport WelcomeTab from \"./views/WelcomeTab\";\nimport FeedbackTab from \"./views/FeedbackTab\";\nimport { Backdrop, CircularProgress, createStyles } from \"@material-ui/core\";\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: any;\n  value: any;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </div>\n  );\n}\n\nfunction a11yProps(index: any) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  },\n}));\n\nexport default function App() {\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n  const [loading, setLoading] = useState(false);\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n\n  const handleSteps = (step: number) => {\n    setValue(step);\n  };\n\n  const toggleLoading = () => setLoading((loading) => !loading);\n\n  return (\n    <div className={classes.root}>\n      <Backdrop open={loading} className={classes.backdrop}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      <AppBar position=\"static\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          aria-label=\"simple tabs example\"\n        >\n          <Tab label=\"Start\" {...a11yProps(0)} />\n          <Tab label=\"Payment\" {...a11yProps(1)} />\n          <Tab label=\"Feedback\" {...a11yProps(3)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <WelcomeTab changeStep={handleSteps} toggleLoading={toggleLoading} />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <PaymentTab changeStep={handleSteps} toggleLoading={toggleLoading} />\n      </TabPanel>\n\n      <TabPanel value={value} index={2}>\n        <FeedbackTab changeStep={handleSteps} toggleLoading={toggleLoading} />\n      </TabPanel>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}